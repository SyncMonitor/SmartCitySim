openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080/
    description: Generated server url
paths:
  /scs/update/maintainer/{id}:
    put:
      tags:
        - sensor-maintainer-resources
      operationId: updateMaintainerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Maintainer'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/update/maintainer/to-be-repaired/true/{sensorId}:
    put:
      tags:
        - sensor-maintainer-resources
      operationId: updateSensorMaintainerToBeRepairedTrueBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/update/maintainer/to-be-repaired/false/{sensorId}:
    put:
      tags:
        - sensor-maintainer-resources
      operationId: updateSensorMaintainerToBeRepairedFalseBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/update/maintainer/to-be-charged/true/{sensorId}:
    put:
      tags:
        - sensor-maintainer-resources
      operationId: updateSensorMaintainerToBeChargedTrueBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/update/maintainer/to-be-charged/false/{sensorId}:
    put:
      tags:
        - sensor-maintainer-resources
      operationId: updateSensorMaintainerToBeChargedFalseBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/update/maintainer/sensor/{sensorId}:
    put:
      tags:
        - sensor-maintainer-resources
      operationId: updateMaintainerBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Maintainer'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/update/type/{sensorId}:
    put:
      tags:
        - sensor-resources
      operationId: updateSensorTypeById
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/update/state/{state}/{id}:
    put:
      tags:
        - sensor-resources
      operationId: updateSensorStateById
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: boolean
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/update/name/{sensorId}:
    put:
      tags:
        - sensor-resources
      operationId: updateSensorNameById
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/update/battery/{sensorId}:
    put:
      tags:
        - sensor-resources
      operationId: updateSensorBatteryById
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/update/state/{state}/{id}:
    put:
      tags:
        - parking-area-resources
      operationId: updateParkingAreaStateById
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: boolean
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/update/longitude/{id}:
    put:
      tags:
        - parking-area-resources
      operationId: updateParkingAreaLongitudeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/update/latitude/{id}:
    put:
      tags:
        - parking-area-resources
      operationId: updateParkingAreaLatitudeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/update/address/{id}:
    put:
      tags:
        - parking-area-resources
      operationId: updateParkingAreaAddressById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/save-data:
    post:
      tags:
        - sensor-resources
      operationId: saveSensorData
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/type/{type}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorsBytype
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/state/{sensorId}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorState
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/parking-stats/{sensorId}:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStatsBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/parking-stats/{id}/{startData}/{endData}:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStatsBySensorIdFromDateToDate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startData
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: endData
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/parking-stats/{id}/{data}:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStatsBySensorIdFromDate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: data
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/notActive:
    get:
      tags:
        - sensor-resources
      operationId: getSensorByIsActiveFalse
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/name/{name}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorsByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/name/starting-with/{str}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorByNameStartingWith
      parameters:
        - name: str
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/name/ending-with/{str}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorByNameEndingWith
      parameters:
        - name: str
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/name/containing/{str}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorByNameContaining
      parameters:
        - name: str
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/isActive:
    get:
      tags:
        - sensor-resources
      operationId: getSensorByIsActiveTrue
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/get-data-from-XML:
    get:
      tags:
        - sensor-resources
      operationId: getSensorsDataFromSource
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/get-all-data:
    get:
      tags:
        - sensor-resources
      operationId: getSensorsData
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/data/{sensorId}:
    get:
      tags:
        - sensor-resources
      operationId: getSensorData
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/{id}:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStatsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/from/{date}:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStatsFromDate
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/from-data-to-data:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStatsFromDateToDate
      parameters:
        - name: date
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SearchDateFilter'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/:
    get:
      tags:
        - parking-stats-resources
      operationId: getParkingAreaStats
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/{latitude}/{longitude}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaByLatitudeAndLongitude
      parameters:
        - name: latitude
          in: path
          required: true
          schema:
            type: string
        - name: longitude
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/state/{id}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaStateById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/occupy:
    get:
      tags:
        - parking-area-resources
      operationId: getOccupyParkingArea
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/longitude/{id}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaLongitudeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/latitude/{id}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaLatitudeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/last-update-date/{sensorId}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaLastUpdateDateBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/free:
    get:
      tags:
        - parking-area-resources
      operationId: getFreeParkingArea
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/data/{id}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaData
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/data-from-sensor/{sensorId}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaDataBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/all:
    get:
      tags:
        - parking-area-resources
      operationId: getAllParkingArea
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/address/{id}:
    get:
      tags:
        - parking-area-resources
      operationId: getParkingAreaAddressById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/maintainers/all:
    get:
      tags:
        - sensor-maintainer-resources
      operationId: getAllSensorsMaintainersData
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/maintainer/{id}:
    get:
      tags:
        - sensor-maintainer-resources
      operationId: getSensorsMaintainersById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/maintainer/sensor/{sensorId}:
    get:
      tags:
        - sensor-maintainer-resources
      operationId: getSensorsMaintainersBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/parking-stats/delete/{sensorId}:
    delete:
      tags:
        - parking-stats-resources
      operationId: deleteParkingAreaStatsBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/parking-area/delete/{sensorId}:
    delete:
      tags:
        - parking-area-resources
      operationId: deleteParkingAreaBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/maintainers/delete/{sensorId}:
    delete:
      tags:
        - sensor-maintainer-resources
      operationId: deleteSensorMaintainersBySensorId
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/delete/{sensorId}:
    delete:
      tags:
        - sensor-resources
      operationId: deleteSensorById
      parameters:
        - name: sensorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/sensor/delete/all:
    delete:
      tags:
        - sensor-resources
      operationId: deleteSensors
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/delete/{id}:
    delete:
      tags:
        - parking-stats-resources
      operationId: deleteParkingAreaStatsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/delete/before/{data}:
    delete:
      tags:
        - parking-stats-resources
      operationId: deleteParkingAreaStatsBeforeDate
      parameters:
        - name: data
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-stats/delete/all:
    delete:
      tags:
        - parking-stats-resources
      operationId: deleteAllParkingstats
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/delete/{id}:
    delete:
      tags:
        - parking-area-resources
      operationId: deleteParkingAreaById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/parking-area/delete/all:
    delete:
      tags:
        - parking-area-resources
      operationId: deleteAllParkingArea
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/maintainers/delete/{id}:
    delete:
      tags:
        - sensor-maintainer-resources
      operationId: deleteSensorMaintainersById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /scs/maintainers/delete/all:
    delete:
      tags:
        - sensor-maintainer-resources
      operationId: deleteAllSensorMaintainers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie
  schemas:
    Maintainer:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        company:
          type: string
        phoneNumber:
          type: string
        mail:
          type: string
    SearchDateFilter:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
security:
  - ApiKeyAuth: []     # use the same name as under securitySchemes